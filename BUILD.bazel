load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@aspect_bazel_lib//lib:copy_to_bin.bzl", "copy_to_bin")
load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@aspect_rules_js//npm:defs.bzl", "npm_link_package")
load("@bazel_skylib//lib:partial.bzl", "partial")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_docker//container:layer.bzl", "container_layer")
load("//:js_image_layer.bzl", "js_image_layer")

package(default_visibility = ["//visibility:public"])

npm_link_package(
    name = "node_modules/@org/lib1",
    src = "//lib1",
)

npm_link_package(
    name = "node_modules/@org/lib2",
    src = "//lib2",
)

npm_link_all_packages(name = "node_modules")

ts_config(
    name = "tsconfig",
    src = ":tsconfig.json",
)

copy_to_bin(
    name = "swcrc",
    srcs = [".swcrc"],
)

ts_project(
    name = "app",
    srcs = ["main.ts"],
    composite = True,
    declaration = True,
    transpiler = partial.make(
        swc,
        swcrc = "//:swcrc",
    ),
    tsconfig = "//:tsconfig",
    deps = [
        "//:node_modules/@org/lib1",
        "//:node_modules/@types/node",
    ],
)

js_binary(
    name = "bin",
    data = [":app"],
    entry_point = "main.js",
)

js_image_layer(
    name = "layers",
    binary = ":bin",
    root = "/app",
)

container_layer(
    name = "app_layer",
    tars = [":layers/app.tar"],
)

container_layer(
    name = "node_modules_layer",
    tars = [":layers/node_modules.tar"],
)

container_image(
    name = "image",
    architecture = "amd64",
    base = "@debian_amd64//image",
    cmd = ["/app/bin.sh"],
    entrypoint = ["bash"],
    layers = [
        ":app_layer",
        ":node_modules_layer",
    ],
    stamp = "@io_bazel_rules_docker//stamp:always",
)
